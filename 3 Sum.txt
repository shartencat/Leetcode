nums=[2,-1,-1,0,1,1,-2,3,4,-3,5,-6]
triplets=[]
class Solution:
    def threeSum(self,nums):
        for i in range(len(nums)-2): 
            for j in range(i+1,len(nums)-1):
                for k in range(i+2,len(nums)):
                    if nums[i]+nums[j]+nums[k]==0:
                        s=sorted([nums[i],nums[j],nums[k]])  #in case there exists duplicate triplets
                    if s not in triplets:
                        triplets.append(s)
        print(triplets)

test=Solution()
test.threeSum(nums)

"""
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? 
Find all unique triplets in the array which gives the sum of zero.
"""

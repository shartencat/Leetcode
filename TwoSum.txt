target=7
nums=[2,5,8,13]

class Solution(object):
    def twoSum(self,nums,target):
        for i in range(len(nums)-1):
            for s in range(len(nums)-i-1):
                sum=nums[i]+nums[i+s+1]
                if sum==target:
                    print("the numbers are:",nums[i],nums[s+i+1])

test1=Solution()
test1.twoSum(nums,target)

#Given an array of integers, return indices of the two numbers such that they add up to a specific target.
#You may assume that each input would have exactly one solution, and you may not use the same element twice.
#Given nums = [2, 7, 11, 15], target = 9,
#Because nums[0] + nums[1] = 2 + 7 = 9,
#return [0, 1].

#the following is an answer submitted to LeetCode by 'nathan_fegard'
class Solution(object):
    def twoSum(self,nums,target):
        if len(nums)<=1:
            return False
        buff_dict={}
        for i in range(len(nums)):
            if nums[i] in buff_dict:
                return [buff_dict[nums[i]],i]
            else:
                buff_dict[target-nums[i]]=i

test1=Solution()
test1.twoSum(nums,target)
